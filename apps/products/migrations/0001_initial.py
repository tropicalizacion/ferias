# Generated by Django 5.0.6 on 2024-10-10 23:24

import django.contrib.gis.db.models.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Origin",
            fields=[
                (
                    "code",
                    models.CharField(
                        help_text="Definición según 'From Vavilov to the Present: A Review' C. Earle Smith, Jr., Economic Botany, Vol. 23, No. 1 (Jan. - Mar., 1969), que va desde I hasta VIII.",
                        max_length=6,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=63)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "region",
                    django.contrib.gis.db.models.fields.PolygonField(
                        blank=True, null=True, srid=4326
                    ),
                ),
                (
                    "mapamundi",
                    models.ImageField(blank=True, null=True, upload_to="maps"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Preparation",
            fields=[
                (
                    "preparation_url",
                    models.CharField(max_length=31, primary_key=True, serialize=False),
                ),
                ("method_name", models.CharField(max_length=63)),
                ("method_description", models.TextField()),
                ("icon", models.ImageField(blank=True, null=True, upload_to="icons")),
            ],
        ),
        migrations.CreateModel(
            name="Storage",
            fields=[
                (
                    "storage_url",
                    models.CharField(max_length=31, primary_key=True, serialize=False),
                ),
                ("method_name", models.CharField(max_length=63)),
                ("method_description", models.TextField()),
                ("icon", models.ImageField(blank=True, null=True, upload_to="icons")),
            ],
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "product_url",
                    models.CharField(
                        help_text="URL del producto",
                        max_length=63,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("verdura", "Verdura u hortaliza"),
                            ("fruta", "Fruta"),
                            ("cereal", "Cereal o grano"),
                            ("legumbre", "Legumbre o leguminosa"),
                            ("raiz", "Tubérculo o raíz"),
                            ("condimento", "Condimento o especia"),
                            ("hierba", "Hierba aromática"),
                            ("otro", "Otra categoría"),
                        ],
                        help_text="Categoría del producto",
                        max_length=15,
                    ),
                ),
                (
                    "common_name",
                    models.CharField(
                        help_text="Nombre común del producto", max_length=63
                    ),
                ),
                (
                    "common_name_alternate",
                    models.TextField(
                        blank=True,
                        help_text="Nombre común alternativo del producto",
                        null=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Descripción del producto", null=True
                    ),
                ),
                (
                    "icon",
                    models.ImageField(
                        blank=True,
                        help_text="Icono utilizado para ilustrar el producto",
                        null=True,
                        upload_to="images/icons",
                    ),
                ),
                (
                    "name_origin",
                    models.TextField(
                        blank=True, help_text="Origen del nombre común", null=True
                    ),
                ),
                (
                    "center_origin_notes",
                    models.TextField(
                        blank=True,
                        help_text="Notas sobre la región originaria del producto",
                        null=True,
                    ),
                ),
                (
                    "food_basket",
                    models.BooleanField(
                        default=False,
                        help_text="¿Es parte de la canasta básica de alimentos?",
                    ),
                ),
                (
                    "nutrition_notes",
                    models.TextField(
                        blank=True,
                        help_text="Notas sobre los datos nutricionales del producto",
                        null=True,
                    ),
                ),
                (
                    "preparation_notes",
                    models.TextField(
                        blank=True,
                        help_text="Notas sobre los métodos de preparación",
                        null=True,
                    ),
                ),
                (
                    "storage_notes",
                    models.TextField(
                        blank=True,
                        help_text="Notas sobre el almacenamiento del producto",
                        null=True,
                    ),
                ),
                (
                    "center_origin",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Región de origen del producto",
                        to="products.origin",
                    ),
                ),
                (
                    "preparation",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Métodos de preparación",
                        to="products.preparation",
                    ),
                ),
                (
                    "storage",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Tipo de almacenamiento",
                        to="products.storage",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Variety",
            fields=[
                ("variety_id", models.AutoField(primary_key=True, serialize=False)),
                ("scientific_name", models.CharField(max_length=63)),
                (
                    "scientific_name_variety",
                    models.CharField(blank=True, max_length=63, null=True),
                ),
                (
                    "common_name_variety",
                    models.CharField(blank=True, max_length=63, null=True),
                ),
                (
                    "common_name_variety_alternate",
                    models.CharField(blank=True, max_length=127, null=True),
                ),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="products"),
                ),
                (
                    "jan",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (0, "Sin disponibilidad"),
                            (1, "Poca disponibilidad"),
                            (2, "Buena disponibilidad"),
                            (3, "Temporada alta"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "feb",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (0, "Sin disponibilidad"),
                            (1, "Poca disponibilidad"),
                            (2, "Buena disponibilidad"),
                            (3, "Temporada alta"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "mar",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (0, "Sin disponibilidad"),
                            (1, "Poca disponibilidad"),
                            (2, "Buena disponibilidad"),
                            (3, "Temporada alta"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "apr",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (0, "Sin disponibilidad"),
                            (1, "Poca disponibilidad"),
                            (2, "Buena disponibilidad"),
                            (3, "Temporada alta"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "may",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (0, "Sin disponibilidad"),
                            (1, "Poca disponibilidad"),
                            (2, "Buena disponibilidad"),
                            (3, "Temporada alta"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "jun",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (0, "Sin disponibilidad"),
                            (1, "Poca disponibilidad"),
                            (2, "Buena disponibilidad"),
                            (3, "Temporada alta"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "jul",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (0, "Sin disponibilidad"),
                            (1, "Poca disponibilidad"),
                            (2, "Buena disponibilidad"),
                            (3, "Temporada alta"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "aug",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (0, "Sin disponibilidad"),
                            (1, "Poca disponibilidad"),
                            (2, "Buena disponibilidad"),
                            (3, "Temporada alta"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "sep",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (0, "Sin disponibilidad"),
                            (1, "Poca disponibilidad"),
                            (2, "Buena disponibilidad"),
                            (3, "Temporada alta"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "oct",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (0, "Sin disponibilidad"),
                            (1, "Poca disponibilidad"),
                            (2, "Buena disponibilidad"),
                            (3, "Temporada alta"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "nov",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (0, "Sin disponibilidad"),
                            (1, "Poca disponibilidad"),
                            (2, "Buena disponibilidad"),
                            (3, "Temporada alta"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "dec",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (0, "Sin disponibilidad"),
                            (1, "Poca disponibilidad"),
                            (2, "Buena disponibilidad"),
                            (3, "Temporada alta"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "product_url",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="varieties",
                        to="products.product",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Price",
            fields=[
                ("price_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "unit",
                    models.CharField(
                        choices=[("kg", "Kilogramo"), ("u", "Unidad")], max_length=3
                    ),
                ),
                ("price", models.IntegerField()),
                ("publication_date", models.DateField()),
                ("year", models.IntegerField(blank=True, null=True)),
                ("week", models.IntegerField(blank=True, null=True)),
                (
                    "variety",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="products.variety",
                    ),
                ),
            ],
        ),
    ]
